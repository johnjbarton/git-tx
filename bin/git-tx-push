#!/bin/sh
#
# Copyright (c) 2010 Google Inc johnjbarton@google.com
# Google BSD license http://code.google.com/google_bsd_license.html


OPTIONS_SPEC="\
git tx-push  <projectName>

Copy the local transplant subdirectory onto the original other repo. 
--
o,other=             set <path> as source of transplant 
v,verbose            echo information
x,verbose_only       echo information then exit"

die() {
	echo >&2 "$@"
	exit 1
}

usage() {
	exec "$0" -h
}

. $(dirname $0)/git-sh-setup.sh

require_clean_work_tree "tx-push"

eval "$(echo "$OPTIONS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"

PROJECT_NAME=
. $(dirname $0)/git-tx-setclear

while [ "$#" -ne 0 ]; do
	case "$1" in 	
	-o|--other)
	    shift 
		OTHER_PATH=$1
		;;
 	-v|--verbose)
 		VERBOSE=yes
 		;;
    -x|--verbose_only)
        VERBOSE_ONLY=yes
        VERBOSE=yes
        ;;
 	--)                   # some kind of marker added by rev-parse
		shift
 	    if [ "$#" -ne 1 ]; then
 	      die "$# project required"
 	    fi
		PROJECT_NAME=$1
		break
		;;
	*)
		usage
		;;
	esac
	shift
done

if [ -z "$PROJECT_NAME" ]; then
  die "No project name"
fi

. $(dirname $0)/git-tx-setup
setOtherPath

if [ "$VERBOSE" =  yes ]; then
  echo "git tx push from local directory $LOCAL_PREFIX"
  echo "git tx push to directory $OTHER_PATH"
  echo "git tx push to repo $OTHER_GIT_URL"
  echo "git tx push to directory of other git repo $OTHER_PREFIX" 
  echo "git tx push diff from commit $LOCAL_COMMIT"
  echo "git tx push diff to commit $OTHER_COMMIT"
fi

if [ "$VERBOSE_ONLY" = yes ]; then
  exit 0
fi

LOCAL_FEATURE_BRANCH=`git symbolic-ref HEAD | sed -e 's/^.*\///'`

if [ -z "$( git branch --contains $LOCAL_COMMIT | grep $LOCAL_FEATURE_BRANCH)" ]; then
  echo "The branch $LOCAL_FEATURE_BRANCH does not contain the transplant commit"
  exit 32
fi

# ----------------- Other ------------------
# verify that the other tree is clean and we are up to date
#
CWD=$( pwd )
cd $OTHER_PATH
require_clean_work_tree "tx-push"

require_tx_commit "$OTHER_COMMIT" "$OTHER_BRANCH"

OTHER_DIFF=$( git log --oneline "$OTHER_COMMIT".."$OTHER_BRANCH" )
if [ "$OTHER_DIFF" ]; then
  echo "$OTHER_DIFF"
  echo "Repo at $OTHER_PATH has ^these^ commits ahead of this transplant, git tx pull first"
  exit 14
fi

OTHER_GIT_DIR=$(git rev-parse --show-toplevel)
git checkout "$OTHER_BRANCH"

#------------------ Local -------------------
cd "$LOCAL_GIT_DIR"

tar -c -C  "$LOCAL_PREFIX" . | ( cd "$OTHER_GIT_DIR" && cd "$OTHER_PREFIX" && rm -r -f * && tar xfp -)

# ------------------ Other ------------------
cd "$OTHER_PATH"

if [ -z "$( git status --porcelain )" ]; then
  echo "Already up-to date"
  exit 0
fi

if [ -z "$OTHER_FEATURE_BRANCH" ]; then
  git status
  exit 0
fi

# Create a feature branch and commit to it

git checkout -f -b "$OTHER_FEATURE_BRANCH"
git add -A
git commit --no-verify -q -m "git-tx-push from $LOCAL_URL $LOCAL_PREFIX at $LOCAL_COMMIT"

exit 0
