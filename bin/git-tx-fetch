#!/bin/sh
#
# Copyright (c) 2010 Google Inc johnjbarton@google.com
# Google BSD license http://code.google.com/google_bsd_license.html

set -e

OPTIONS_SPEC="\
git tx-push  <projectName>

Squashes all changes on the transplanted subdirectory into a commit on the this repo
--
v,verbose            echo information
x,verbose_only       echo information then exit"

die() {
	echo >&2 "$@"
	exit 1
}

usage() {
	exec "$0" -h
}

. $(dirname $0)/git-sh-setup.sh

require_clean_work_tree "tx-fetch"

eval "$(echo "$OPTIONS_SPEC" | git rev-parse --parseopt -- "$@" || echo exit $?)"

get_repo_base() {
	(
		cd "`/bin/pwd`" &&
		cd "$1" || cd "$1.git" &&
		{
			cd .git
			pwd
		}
	) 2>/dev/null
}


PROJECT_NAME=

while [ "$#" -ne 0 ]; do
	case "$1" in 
 	-v|--verbose)
 		VERBOSE=yes
 		;;
    -x|--verbose_only)
        VERBOSE_ONLY=yes
        VERBOSE=yes
        ;;
 	--)                   # some kind of marker added by rev-parse
		shift
 	    if [ "$#" -ne 1 ]; then
 	      die "$# project required"
 	    fi
		PROJECT_NAME=$1
		break
		;;
	*)
		usage
		;;
	esac
	shift
done

if [ -z "$PROJECT_NAME" ]; then
  die "No project name"
fi

. $(dirname $0)/git-tx-setup 
setOtherPath

if [ "$VERBOSE" =  yes ]; then
  echo "git tx fetch to local directory $LOCAL_PREFIX"
  echo "git tx fetch from directory $OTHER_PATH"
  echo "git tx fetch from repo $OTHER_GIT_URL"
  echo "git tx fetch from directory of other git repo $OTHER_PREFIX" 
  echo "git tx fetch diff to commit $LOCAL_COMMIT"
  echo "git tx fetch diff from commit $OTHER_COMMIT"
fi

if [ "$VERBOSE_ONLY" = yes ]; then
  exit 0
fi

# verify that the other tree is clean and we are up to date
#
CWD=$( pwd )
cd "$OTHER_PATH"
require_clean_work_tree "tx-fetch"

OTHER_GIT_DIR=$(git rev-parse --show-toplevel)
cd "$OTHER_GIT_DIR"
OTHER_BRANCH=`git symbolic-ref HEAD | sed -e 's/^.*\///'`

# verify that the other tree has our commit
#
require_tx_branch "$OTHER_COMMIT"

# diff within the transplant
#
TMP_GIT_TX_PATCH=/tmp/git-tx-$$.patch
git diff --no-prefix "$OTHER_COMMIT"..HEAD "--" "$OTHER_PREFIX" > "$TMP_GIT_TX_PATCH"

if [ -z "$(cat $TMP_GIT_TX_PATCH)" ]; then
  echo "Nothing to fetch, diff is empty"
  cd "$OTHER_GIT_DIR"
  advance_tx_branch "$OTHER_COMMIT"
  cd "$LOCAL_GIT_DIR"
  exit 0
fi

cd "$LOCAL_GIT_DIR"
cd "$LOCAL_PREFIX"

LOCAL_BRANCH=`git symbolic-ref HEAD | sed -e 's/^.*\///'`
require_tx_branch "$LOCAL_COMMIT"

git checkout tx-"$PROJECT_NAME"

# patch this tree with changes from the other one, while at the prefix depth
#
patch < "$TMP_GIT_TX_PATCH"

# commit the changes
git add -A
git commit -m "Patch from $OTHER_GIT_URL $OTHER_PREFIX at $OTHER_COMMIT"

git checkout -q "$LOCAL_BRANCH"

cd "$OTHER_GIT_DIR"
advance_tx_branch "$OTHER_COMMIT"
cd "$LOCAL_GIT_DIR"

exit 0
